# Credit to Maxim Norin https://github.com/mnorin
# for OOP-based code from https://stackoverflow.com/questions/36771080/creating-classes-and-objects-using-bash-scripting#comment115718570_40981277
# Modified by Aurtzy

# Class named "app" for bash object

# fields
declare -Ag fields

# Handles getting/setting fields.
app.field() {
	if [ "$2" == "=" ]; then
		fields[$1]=$3
	else
		echo ${fields[$1]}
	fi
}

# app class constructor
# Params: $1 = installCommand $2 = sourcePaths
app.constructor() {
	app.name = "app"
	
	# Command that is used to install app
	if [ ! "$1" ]; then
		app.installCommand = "${DEFAULT_APP_INSTALL_COMMAND//"$name"/app}"
	else
		app.installCommand = "$1"
	fi

	# Directories/files that will be backed up
	# Single string with dirs/files separated by $stringSeparator
	app.sourcePaths = $2
	
	# Backup type
	if [ ! "$3" ]; then
		app.backupType = $DEFAULT_APP_BACKUP_TYPE
	else
		app.backupType = $3
	fi
	
	echo "app: Built."
}

# Getter/setter methods
app.name() {
	app.field name "$1" "$2"
}
app.installCommand() {
	app.field installCommand "$1" "$2"
}
app.sourcePaths() {
	app.field sourcePaths "$1" "$2"
}
app.backupType() {
	app.field backupType "$1" "$2"
}

# Install app on call
# Also reset to original dir in case command used cd
app.install() {
	echo "app: Installing..."
	eval $(app.installCommand)
	cd "$SCRIPT_WORKING_DIR"
}

# Back up sources
app.backup() {
	if [ "$(app.sourcePaths)" = '' ]; then
		echo "app: No sourcePaths specified for app."
		return
	else
		dump "INITIALIZE" "app"
		backupDir="$APP_BACKUP_DIR/app"
		if [ ! -d "$backupDir" ]; then
			echo
			echo "app: Backup directory not found. Making one for you..."
			mkdir -p "$backupDir"
		fi
		while
		declare -i i+=1
		do
			echo
			sourcePath="$(extractSourcePath "$(app.sourcePaths)" $i)"
			if [ "$sourcePath" = '' ]; then
				break
			else
				if [ ${sourcePath: -1} = '/' ]; then
					sourcePath=${sourcePath::-1}
				fi
				source="${sourcePath##*"/"}"
				sourceDir="${sourcePath%"/"*}"
				
				# Check if sourcePath exists
				if [[ -f "$sourcePath" || -d "$sourcePath" ]]; then
					echo "app: Found: $sourcePath"
					
					# Dump any old backup
					echo "$backupDir/$source"
					if [[ -f "$backupDir/$source" || -d "$backupDir/$source" ]]; then
						echo "app: Old backup found. Dumping..."
						dump "$backupDir/$source" "app"
						echo "app: Dumped old $source"
					fi
					
					# PERFORM BACKUP
					echo "app: Performing backup..."
					if [ "$(app.backupType)" = "ARCHIVE" ]; then
						cp -a "$sourcePath" "$backupDir/$source"
						echo "app: Archived $sourcePath"
					elif [ "$(app.backupType)" = "HARDLINK" ]; then
						cp -al "$sourcePath" "$backupDir/$source"
						echo "app: Hard-linked $sourcePath"
					else
						echo "app: Error: Backup type $(app.backupType) not recognized."
					fi
				else
					echo "app: Error: Could not find $sourcePath"
					continue
				fi
			fi
		done
		echo "app: Backup completed."
	fi
}

