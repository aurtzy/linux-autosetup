# Credit to Maxim Norin https://github.com/mnorin
# for OOP-based code from https://stackoverflow.com/questions/36771080/creating-classes-and-objects-using-bash-scripting#comment115718570_40981277
# Modified by Aurtzy

# Class named "appGroup" for bash object

# fields
declare -Ag fields

# Handles getting/setting fields.
appGroup.field() {
	if [ "$2" == "=" ]; then
		fields[$1]=$3
	else
		echo ${fields[$1]}
	fi
}

# appGroup class constructor
# Params: none
appGroup.constructor() {
	if [ "$fields" != '' ]; then
		echo "appGroup: Confliction? There may be an overlap with this name."
	fi
	appGroup.apps = ''
	
	echo "appGroup: App group built."
}

# Getter/setter methods
appGroup.apps() {
	appGroup.field apps "$1" "$2"
}

# Add app to apps field
appGroup.add() {
	if [ "$appGroup.apps" = '' ]; then
		appGroup.apps = "$1"
	else
		appGroup.apps = "$(appGroup.apps) $1"
	fi
}

# Install appGroup on call
# Also reset to original dir in case command used cd
appGroup.install() {
	echo "appGroup: Installing from app group..."
	echo "Use -y/-n if you want to autofill."
	for app in $(appGroup.apps); do
		$app.install
	done
	echo
	echo "If any apps failed to install, they will be listed below:"
	for app in $(appGroup.apps); do
		if [ $($app.failedInstall) -eq 1 ]; then
			echo $app
		fi
	done
	echo "appGroup: Installation completed!"
	installAppBackups=0
}

# Back up sources
appGroup.backup() {
	echo "appGroup: Backing up from app group..."
	for app in $(appGroup.apps)
	do
		$app.backup
	done
	echo "appGroup: Backup completed!"
}

