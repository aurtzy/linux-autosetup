#!bin/bash

##########################
# CONFIGURABLE VARIABLES #
##########################

# DEFAULT_APP_BACKUP_TYPE="COPY"

# APP_BACKUP_DIR="./app-backups"

DEFAULT_APP_INSTALL_COMMAND="echo installing $app through default app install command..."
SOME_ALTERNATE_INSTALL_COMMAND="echo omg you just installed $app through an alternate install command..."

# DUMP_DIR="./dump"

################
# APPLICATIONS #
################

# App "appname" "one-liner custom install command" "backupType:COPY,HARDLINK" "path/to/dir/or/folder/to/backup" "other/path/to/backup"

App defaultTest "" "" ""
App tooManyArgs "" "" "" "" ""
App alternateDefaultTest "$SOME_ALTERNATE_INSTALL_COMMAND"
App oneLinerInstaller "echo custom command, here i come from $app; echo this should be the second line to the oneLinerInstaller app; declare somevariable='somevariablestoredstring'; eval echo probably won't work, but if it does it should print 'somevariablestoredstring': $somevariable"
App notActualInstallCommand "thisshouldnotbeavalidcommand"

App oneDir "" "" "./testerFiles/oneDir/"
App oneDirHardLinked "" "HARDLINK" "./testerFiles/oneDirHardLinked/"
App oneDirWithSpaces "" "" "./testerFiles/one Dir With Spaces"
App oneDirWithSpacesFile "" "" "./testerFiles/oneDirWithSpacesFile/this file has spaces"
App multDirs "" "" "./testerFiles/multDirs1" "./testerFiles/multDirs 2" "./testerFiles/multDirs3"
App dirsDoNotExist "" "" "./testerFiles/do not create these directories" "./testerFiles/hello there" "./testerFiles/yes"

# try https://stackoverflow.com/questions/13659318/how-to-remove-space-from-string if this doesn't already give an error
App 'app with space'

######################
# APPLICATION GROUPS #
######################

appGroups=(
	[testInstalling]="
		defaultTest
		tooManyArgs
		alternateDefaultTest
		oneLinerInstaller
		notActualInstallCommand
		thisAppDoesNotExist
	"
	[testBackingUp]="
		oneDir
		oneDirHardLinked
		oneDirWithSpaces
		oneDirWithSpacesFile
		multDirs
		dirsDoNotExist
	"
	[testEmptyAppGroup]="
		
	"
)

onInstall() {
	return
}
onBackup() {
	return
}
onInstallFinish() {
	return
}
onBackupFinish() {
	return
}
