# SPACES will be used to delimit entries
# if more flexibility is needed, | or > can be used

GLOBAL:
    distros: arch debian endeavouros
    install_cmd: flatpak install $apps  # see pack1 comments on install_cmd
    # OR
    install_cmd:
        arch: yay --noconfirm -S $apps
        debian: sudo apt install $apps
        other: flatpak install $apps    # other KEYWORD - if distro chosen does not have its own install_cmd, use this or overriden other
    backup_type: COPY/COMPRESS/ENCRYPT
    backup_paths: dir1 dir2 # allows multiple backup locations!! things like beginning/end spaces and commas would not be allowed like this, so mention block literals (like distro3 below) in docs
    backup_install: never/ask/always # whether script should ask to install backups
    backup_keep: 1  # how many old backups to keep - 0 keeps only a single backup, replacing every time; 3 will keep 1 most recent backup and 3 old ones
    dump_dir: dir/null # directory to dump to; if set to null, type can be read as None - if so, backups will be deleted instead
    tmp_dir: /tmp/linux-autosetup # MUST be set, else script should error


GROUPS:
    packs1: pack1 pack2
    packs2: pack2 pack3 pack4


pack1:
    apps: app1 app2 # apps that are run through install_cmd
    install_cmd: flatpak install $apps      # this will be command that is run when
                                            # installing - if empty, then default to global
    # OR                                    # users can choose to set single install_cmd like this
    install_cmd:                            # or specify for different distros
        arch: paru -S $apps
        debian: some cmd equiv to aur or something idk
        distro3: |
            some commands
            on different lines
            i think this is how it works
        # should unincluded distros be ignored when installing or default to "other: ..." or global install_cmd?
    backup_sources: path1 path2
    backup_type: COPY/COMPRESS/ENCRYPT
    backup_paths: dir1 dir2
    backup_install: never/ask/always
    backup_keep: 0
    dump_dir: dir/null
    tmp_dir: dir/null

data:
  data1: echo hello!!
  data2: |
    echo \nuwu
    pwd
    echo "hewoo dewe!!"{1..3}[]
    exit 1

other_section: hewwo
_________________


PACKS:
    GLOBAL:
        ubuntu:

            install_cmd: |
                echo hi
                sudo apt --noconfirm install $apps
        arch:
            install_cmd: paru -S --noconfirm $apps
        popos:
            TAGS: ubuntu

    pack1:
        ubuntu:
            apps: app1 app2
            backup_sources: path/to/somewhere another/path
            # OR
            backup_sources: |
                "path /with SPACES!"
                "these/w ould' /be required to be shell-compliant"
            override_settings:
                custom_install_cmd:
                custom_backup_cmd

        popos:
            apps: app2 app1.5


# OR

#OTHER:

#ubuntu:
    #settings:
        #install_cmd:
    #packs:
        #pack1:
            #apps: app1 app2
            #backup_sources: . . .

# OR

DEFAULT:
    fallback: # optional; any default fallback settings can be set in this, which are used
              # instead if not set

    ubuntu:


pack1:
    ubuntu:
        apps:
        backup_sources:
        overrides:

# OR

# CHOOSING THIS!
pack1:
    ubuntu:
        apps: deez nuts app3 app4
        backup_sources: dez/nutz
        # settings and commands could be instances of separate classes??
        settings:
            backup_type: COPY
            backup_paths: source/path
            backup_keep: 1
            dump_dir: dump/directory
            tmp_dir: tmp/directory
            placeholder_str: some_str
            error_handling: something # can just be a string... or enum? figure out whether importing is big deal
        commands:
            app_install_cmd: install
            backup_install_cmd: install backups
            backup_create_cmd: create backups


____________________


app_install_cmd: echo install deez nuts


backup_type: COPY
# OR
backup_type:
    CREATE: 'CMD'
    EXTRACT: 'CMD'
backup_cmds:
    backup_install_cmd: echo extract deez nuts
    backup_create_cmd: echo create deez nuts


backup_create_cmd: echo deez nuts
backup_extract_cmd: echo extract deez nuts

# INSTEAD?:
pack1:
    ubuntu:
        vars:   # remember to perform str() on these
            apps: deez nuts app3 app4
            backup_sources: deez/nuts
            backup_install_cmd: echo install deez nuts
            backup_create_cmd: echo create deez nuts
            # above would be specially handled vars
            some_random_var: this var could be used in substitution
            # order can be unrestricted; however, how to handle substitution?
            # should it be done in-order, or lazily (correct term?)?
            # in-order it is. no clear, major advantage from this complexity and can implement later if want

_________________
# Finalizing rough draft of config template

DEFAULT:
    FALLBACK:
        settings:
            # . . .
        commands:
            # . . .
    ubuntu:
        extend: [debian] # special keyword allows inheriting before FALLBACK; equivalent would be [debian, FALLBACK]

# allow for different cases of types which i can put some effort in making conversions
# e.g. if apps is str, convert to list[str], but accept list[str] too here.
pack1:
    ubuntu:
        extend: [debian, popos]
        apps: deez nuts app3 app4
        backup_sources: dez/nutz
        # settings and commands could be instances of separate classes??
        settings:
            backup_type: COPY
            backup_paths: source/path
            backup_keep: 1
            dump_dir: dump/directory
            tmp_dir: tmp/directory
            placeholder_str: some_str
            error_handling: something # can just be a string... or enum? figure out whether importing is big deal
        commands:
            app_install_cmd: install
            backup_install_cmd: install backups
            backup_create_cmd: create backups



